
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and assign boolean break call case char default divide do double else end equals false float for function greater greater_or_equal identifier if int l_parenthesis long lower lower_or_equal minus not null number_unsigned or plus print r_parenthesis return string switch text then times true void whilestart : programprogram : blok\n    blok : blok_deklaracji end blok_instrukcji end\n        | end blok_instrukcji end\n        | blok_deklaracji end end\n        | end end\n    \n    blok_deklaracji : dek_funs\n    \n    dek_funs :\n        | dek_fun\n        | dek_fun dek_funs\n    \n    dek_fun : function var_sym identifier l_parenthesis arguments r_parenthesis instrukcjas return wyrazenie end\n        | function void identifier l_parenthesis arguments r_parenthesis instrukcjas end\n    \n    arguments :\n        | var_sym identifier\n        | var_sym identifier arguments\n    \n    blok_instrukcji : instrukcjas\n    \n    instrukcjas :\n        | instrukcja\n        | instrukcja instrukcjas\n    \n    instrukcja : instr_inicjuj end\n        | instr_podstaw end\n        | instr_wywolaj end\n        | instr_if end\n        | instr_while end\n        | instr_for end\n        | wypisz end\n        | instr_switch end\n    \n    instr_inicjuj : var_liczba_sym identifier assign liczba\n        | var_liczba_sym identifier assign null\n        | string identifier assign text\n        | string identifier assign null\n    \n    instr_podstaw : identifier assign wyrazenie\n        | identifier assign null\n    \n    instr_wywolaj : call identifier l_parenthesis wyrazenies r_parenthesis\n    \n    wyrazenies :\n        | wyrazenie\n        | wyrazenie wyrazenies\n    \n    instr_if : if warunek then instrukcja instrukcjas\n        | if warunek then instrukcja instrukcjas else instrukcja instrukcjas\n    \n    instr_while : while warunek do instrukcjas\n    \n    instr_for : for for_warunek do instrukcjas\n    \n    wypisz : print wyrazenie\n        | print text\n    \n    instr_switch : switch l_parenthesis wyrazenie r_parenthesis case_blok case_bloks case_default\n    \n    case_blok : case l_parenthesis wyrazenie r_parenthesis then instrukcjas end\n        | case l_parenthesis wyrazenie r_parenthesis then instrukcjas break end\n    \n    case_default : default then instrukcjas end\n    \n    case_bloks :\n        | case_blok\n        | case_blok case_bloks\n    \n    var_sym : var_liczba_sym\n        | string\n        | boolean\n        | char\n    \n    var_liczba_sym : int\n        | long\n        | float\n        | double\n    \n    wyrazenie : skladnik skladniks\n        | true\n        | false\n        | text\n    \n    skladnik : czynnik czynniks\n    \n    skladniks :\n        | oper_add skladnik\n        | oper_add skladnik skladniks\n    \n    oper_add : plus\n        | minus\n    \n    oper_mul : times\n        | divide\n    \n    czynnik : identifier\n        | liczba\n        | instr_wywolaj\n        | wyr_w_naw\n    \n    czynniks :\n        | oper_mul czynnik\n        | oper_mul czynnik czynniks\n    \n    liczba : number_unsigned\n        | minus number_unsigned\n    \n    wyr_w_naw : l_parenthesis wyrazenie r_parenthesis\n    \n    warunek : warunek_prosty\n        | not warunek_prosty warunek_prostys\n    \n    warunek_prosty : wyrazenie oper_porownania wyrazenie\n    \n    warunek_prostys :\n        | oper_war warunek_prosty\n        | oper_war warunek_prosty warunek_prostys\n    \n    oper_war : and\n        | or\n    \n    oper_porownania : equals\n        | not_equals\n        | greater\n        | lower\n        | greater_or_equal\n        | lower_or_equal\n    \n    not_equals : not equals\n    \n    for_warunek : instr_inicjuj warunek_prosty instr_podstaw\n    '
    
_lr_action_items = {'end':([0,4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,35,43,45,46,47,48,49,50,51,52,53,62,63,64,65,66,67,68,69,70,71,77,78,84,85,98,102,106,108,109,114,115,116,117,120,127,128,129,130,131,137,139,141,142,147,155,156,158,162,163,164,166,167,168,169,170,171,173,],[5,9,10,-7,-8,42,44,-16,-17,46,47,48,49,50,51,52,53,-10,82,-19,-20,-21,-22,-23,-24,-25,-26,-27,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-42,-43,-32,-33,-59,-63,-79,-17,-17,-28,-29,-30,-31,-17,-64,-75,-80,-40,-41,-34,-38,-66,-77,-17,162,-17,-44,-12,-39,-17,169,170,-17,-11,-47,172,174,]),'function':([0,7,162,169,],[8,8,-12,-11,]),'$end':([1,2,3,10,42,44,82,],[0,-1,-2,-6,-5,-4,-3,]),'string':([5,8,9,13,28,46,47,48,49,50,51,52,53,88,108,109,112,113,120,145,146,147,148,156,164,168,],[24,39,24,24,24,-20,-21,-22,-23,-24,-25,-26,-27,24,24,24,39,39,24,39,24,24,24,24,24,24,]),'identifier':([5,9,13,22,24,25,26,27,29,31,32,33,34,36,37,38,39,40,41,46,47,48,49,50,51,52,53,55,60,62,63,64,65,66,67,68,69,70,71,73,76,79,87,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,108,109,110,114,115,116,117,119,120,122,123,124,125,126,127,128,129,134,137,141,142,146,147,148,152,156,161,164,168,],[23,23,23,54,56,57,67,67,67,-55,-56,-57,-58,80,81,-51,-52,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,67,67,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,67,67,67,67,23,67,-89,-90,-91,-92,-93,-94,-59,67,-67,-68,-63,67,-69,-70,-79,23,23,23,-28,-29,-30,-31,67,23,67,-87,-88,-83,-95,-64,-75,-80,145,-34,-66,-77,23,23,23,67,23,67,23,23,]),'call':([5,9,13,26,27,29,46,47,48,49,50,51,52,53,55,60,62,63,64,65,66,67,68,69,70,71,73,76,79,87,88,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,108,109,114,115,116,117,119,120,122,123,124,126,127,128,129,137,141,142,146,147,148,152,156,161,164,168,],[25,25,25,25,25,25,-20,-21,-22,-23,-24,-25,-26,-27,25,25,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,25,25,25,25,25,25,-89,-90,-91,-92,-93,-94,-59,25,-67,-68,-63,25,-69,-70,-79,25,25,-28,-29,-30,-31,25,25,25,-87,-88,-95,-64,-75,-80,-34,-66,-77,25,25,25,25,25,25,25,25,]),'if':([5,9,13,46,47,48,49,50,51,52,53,88,108,109,120,146,147,148,156,164,168,],[26,26,26,-20,-21,-22,-23,-24,-25,-26,-27,26,26,26,26,26,26,26,26,26,26,]),'while':([5,9,13,46,47,48,49,50,51,52,53,88,108,109,120,146,147,148,156,164,168,],[27,27,27,-20,-21,-22,-23,-24,-25,-26,-27,27,27,27,27,27,27,27,27,27,27,]),'for':([5,9,13,46,47,48,49,50,51,52,53,88,108,109,120,146,147,148,156,164,168,],[28,28,28,-20,-21,-22,-23,-24,-25,-26,-27,28,28,28,28,28,28,28,28,28,28,]),'print':([5,9,13,46,47,48,49,50,51,52,53,88,108,109,120,146,147,148,156,164,168,],[29,29,29,-20,-21,-22,-23,-24,-25,-26,-27,29,29,29,29,29,29,29,29,29,29,]),'switch':([5,9,13,46,47,48,49,50,51,52,53,88,108,109,120,146,147,148,156,164,168,],[30,30,30,-20,-21,-22,-23,-24,-25,-26,-27,30,30,30,30,30,30,30,30,30,30,]),'int':([5,8,9,13,28,46,47,48,49,50,51,52,53,88,108,109,112,113,120,145,146,147,148,156,164,168,],[31,31,31,31,31,-20,-21,-22,-23,-24,-25,-26,-27,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'long':([5,8,9,13,28,46,47,48,49,50,51,52,53,88,108,109,112,113,120,145,146,147,148,156,164,168,],[32,32,32,32,32,-20,-21,-22,-23,-24,-25,-26,-27,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'float':([5,8,9,13,28,46,47,48,49,50,51,52,53,88,108,109,112,113,120,145,146,147,148,156,164,168,],[33,33,33,33,33,-20,-21,-22,-23,-24,-25,-26,-27,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'double':([5,8,9,13,28,46,47,48,49,50,51,52,53,88,108,109,112,113,120,145,146,147,148,156,164,168,],[34,34,34,34,34,-20,-21,-22,-23,-24,-25,-26,-27,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'void':([8,],[37,]),'boolean':([8,112,113,145,],[40,40,40,40,]),'char':([8,112,113,145,],[41,41,41,41,]),'else':([13,45,46,47,48,49,50,51,52,53,120,139,],[-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-17,148,]),'return':([13,45,46,47,48,49,50,51,52,53,146,154,],[-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-17,161,]),'break':([13,45,46,47,48,49,50,51,52,53,168,171,],[-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-17,173,]),'assign':([23,54,56,],[55,83,86,]),'not':([26,27,61,62,63,64,65,66,67,68,69,70,71,98,102,106,127,128,129,137,141,142,],[60,60,97,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-59,-63,-79,-64,-75,-80,-34,-66,-77,]),'true':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,71,73,76,79,87,90,91,92,93,94,95,96,98,102,106,114,115,116,117,119,122,123,124,126,127,128,129,137,141,142,152,161,],[63,63,63,63,63,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,63,63,63,63,63,-89,-90,-91,-92,-93,-94,-59,-63,-79,-28,-29,-30,-31,63,63,-87,-88,-95,-64,-75,-80,-34,-66,-77,63,63,]),'false':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,71,73,76,79,87,90,91,92,93,94,95,96,98,102,106,114,115,116,117,119,122,123,124,126,127,128,129,137,141,142,152,161,],[64,64,64,64,64,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,64,64,64,64,64,-89,-90,-91,-92,-93,-94,-59,-63,-79,-28,-29,-30,-31,64,64,-87,-88,-95,-64,-75,-80,-34,-66,-77,64,64,]),'text':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,71,73,76,79,86,87,90,91,92,93,94,95,96,98,102,106,114,115,116,117,119,122,123,124,126,127,128,129,137,141,142,152,161,],[65,65,78,65,65,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,65,65,65,116,65,65,-89,-90,-91,-92,-93,-94,-59,-63,-79,-28,-29,-30,-31,65,65,-87,-88,-95,-64,-75,-80,-34,-66,-77,65,65,]),'number_unsigned':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,71,72,73,76,79,83,87,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,114,115,116,117,119,122,123,124,126,127,128,129,137,141,142,152,161,],[71,71,71,71,71,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,106,71,71,71,71,71,71,-89,-90,-91,-92,-93,-94,-59,71,-67,-68,-63,71,-69,-70,-79,-28,-29,-30,-31,71,71,-87,-88,-95,-64,-75,-80,-34,-66,-77,71,71,]),'minus':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,71,73,76,79,83,87,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,114,115,116,117,119,122,123,124,126,127,128,129,137,141,142,152,161,],[72,72,72,72,72,101,-60,-61,-62,-75,-71,-72,-73,-74,-78,72,72,72,72,72,72,-89,-90,-91,-92,-93,-94,-59,72,-67,-68,-63,72,-69,-70,-79,-28,-29,-30,-31,72,72,-87,-88,-95,101,-75,-80,-34,-66,-77,72,72,]),'l_parenthesis':([26,27,29,30,55,57,60,62,63,64,65,66,67,68,69,70,71,73,76,79,80,81,87,90,91,92,93,94,95,96,98,99,100,101,102,103,104,105,106,114,115,116,117,119,122,123,124,126,127,128,129,137,141,142,144,152,161,],[73,73,73,79,73,87,73,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,73,73,73,112,113,73,73,-89,-90,-91,-92,-93,-94,-59,73,-67,-68,-63,73,-69,-70,-79,-28,-29,-30,-31,73,73,-87,-88,-95,-64,-75,-80,-34,-66,-77,152,73,73,]),'null':([55,83,86,],[85,115,117,]),'then':([58,59,62,63,64,65,66,67,68,69,70,71,89,98,102,106,121,125,127,128,129,137,140,141,142,149,159,165,],[88,-81,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-84,-59,-63,-79,-82,-83,-64,-75,-80,-34,-84,-66,-77,-86,164,168,]),'do':([59,62,63,64,65,66,67,68,69,70,71,74,75,84,85,89,98,102,106,121,125,127,128,129,132,137,140,141,142,149,],[-81,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,108,109,-32,-33,-84,-59,-63,-79,-82,-83,-64,-75,-80,-96,-34,-84,-66,-77,-86,]),'equals':([61,62,63,64,65,66,67,68,69,70,71,97,98,102,106,127,128,129,137,141,142,],[91,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,126,-59,-63,-79,-64,-75,-80,-34,-66,-77,]),'greater':([61,62,63,64,65,66,67,68,69,70,71,98,102,106,127,128,129,137,141,142,],[93,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-59,-63,-79,-64,-75,-80,-34,-66,-77,]),'lower':([61,62,63,64,65,66,67,68,69,70,71,98,102,106,127,128,129,137,141,142,],[94,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-59,-63,-79,-64,-75,-80,-34,-66,-77,]),'greater_or_equal':([61,62,63,64,65,66,67,68,69,70,71,98,102,106,127,128,129,137,141,142,],[95,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-59,-63,-79,-64,-75,-80,-34,-66,-77,]),'lower_or_equal':([61,62,63,64,65,66,67,68,69,70,71,98,102,106,127,128,129,137,141,142,],[96,-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-59,-63,-79,-64,-75,-80,-34,-66,-77,]),'r_parenthesis':([62,63,64,65,66,67,68,69,70,71,87,98,102,106,107,111,112,113,118,119,127,128,129,135,136,137,138,141,142,145,153,160,],[-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,-35,-59,-63,-79,129,133,-13,-13,137,-35,-64,-75,-80,146,147,-34,-37,-66,-77,-13,-15,165,]),'and':([62,63,64,65,66,67,68,69,70,71,89,98,102,106,125,127,128,129,137,140,141,142,],[-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,123,-59,-63,-79,-83,-64,-75,-80,-34,123,-66,-77,]),'or':([62,63,64,65,66,67,68,69,70,71,89,98,102,106,125,127,128,129,137,140,141,142,],[-64,-60,-61,-62,-75,-71,-72,-73,-74,-78,124,-59,-63,-79,-83,-64,-75,-80,-34,124,-66,-77,]),'plus':([62,66,67,68,69,70,71,102,106,127,128,129,137,142,],[100,-75,-71,-72,-73,-74,-78,-63,-79,100,-75,-80,-34,-77,]),'times':([66,67,68,69,70,71,106,128,129,137,],[104,-71,-72,-73,-74,-78,-79,104,-80,-34,]),'divide':([66,67,68,69,70,71,106,128,129,137,],[105,-71,-72,-73,-74,-78,-79,105,-80,-34,]),'case':([133,143,150,172,174,],[144,144,144,-45,-46,]),'default':([143,150,151,157,172,174,],[-48,-48,159,-50,-45,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'program':([0,],[2,]),'blok':([0,],[3,]),'blok_deklaracji':([0,],[4,]),'dek_funs':([0,7,],[6,35,]),'dek_fun':([0,7,],[7,7,]),'blok_instrukcji':([5,9,],[11,43,]),'instrukcjas':([5,9,13,108,109,120,146,147,156,164,168,],[12,12,45,130,131,139,154,155,163,167,171,]),'instrukcja':([5,9,13,88,108,109,120,146,147,148,156,164,168,],[13,13,13,120,13,13,13,13,13,156,13,13,13,]),'instr_inicjuj':([5,9,13,28,88,108,109,120,146,147,148,156,164,168,],[14,14,14,76,14,14,14,14,14,14,14,14,14,14,]),'instr_podstaw':([5,9,13,88,108,109,110,120,146,147,148,156,164,168,],[15,15,15,15,15,15,132,15,15,15,15,15,15,15,]),'instr_wywolaj':([5,9,13,26,27,29,55,60,73,76,79,87,88,90,99,103,108,109,119,120,122,146,147,148,152,156,161,164,168,],[16,16,16,69,69,69,69,69,69,69,69,69,16,69,69,69,16,16,69,16,69,16,16,16,69,16,69,16,16,]),'instr_if':([5,9,13,88,108,109,120,146,147,148,156,164,168,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instr_while':([5,9,13,88,108,109,120,146,147,148,156,164,168,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instr_for':([5,9,13,88,108,109,120,146,147,148,156,164,168,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'wypisz':([5,9,13,88,108,109,120,146,147,148,156,164,168,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'instr_switch':([5,9,13,88,108,109,120,146,147,148,156,164,168,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'var_liczba_sym':([5,8,9,13,28,88,108,109,112,113,120,145,146,147,148,156,164,168,],[22,38,22,22,22,22,22,22,38,38,22,38,22,22,22,22,22,22,]),'var_sym':([8,112,113,145,],[36,134,134,134,]),'warunek':([26,27,],[58,74,]),'warunek_prosty':([26,27,60,76,122,],[59,59,89,110,140,]),'wyrazenie':([26,27,29,55,60,73,76,79,87,90,119,122,152,161,],[61,61,77,84,61,107,61,111,119,125,119,61,160,166,]),'skladnik':([26,27,29,55,60,73,76,79,87,90,99,119,122,152,161,],[62,62,62,62,62,62,62,62,62,62,127,62,62,62,62,]),'czynnik':([26,27,29,55,60,73,76,79,87,90,99,103,119,122,152,161,],[66,66,66,66,66,66,66,66,66,66,66,128,66,66,66,66,]),'liczba':([26,27,29,55,60,73,76,79,83,87,90,99,103,119,122,152,161,],[68,68,68,68,68,68,68,68,114,68,68,68,68,68,68,68,68,]),'wyr_w_naw':([26,27,29,55,60,73,76,79,87,90,99,103,119,122,152,161,],[70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,]),'for_warunek':([28,],[75,]),'oper_porownania':([61,],[90,]),'not_equals':([61,],[92,]),'skladniks':([62,127,],[98,141,]),'oper_add':([62,127,],[99,99,]),'czynniks':([66,128,],[102,142,]),'oper_mul':([66,128,],[103,103,]),'wyrazenies':([87,119,],[118,138,]),'warunek_prostys':([89,140,],[121,149,]),'oper_war':([89,140,],[122,122,]),'arguments':([112,113,145,],[135,136,153,]),'case_blok':([133,143,150,],[143,150,150,]),'case_bloks':([143,150,],[151,157,]),'case_default':([151,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','parser.py',32),
  ('program -> blok','program',1,'p_program','parser.py',38),
  ('blok -> blok_deklaracji end blok_instrukcji end','blok',4,'p_blok','parser.py',43),
  ('blok -> end blok_instrukcji end','blok',3,'p_blok','parser.py',44),
  ('blok -> blok_deklaracji end end','blok',3,'p_blok','parser.py',45),
  ('blok -> end end','blok',2,'p_blok','parser.py',46),
  ('blok_deklaracji -> dek_funs','blok_deklaracji',1,'p_blok_deklaracji','parser.py',59),
  ('dek_funs -> <empty>','dek_funs',0,'p_dek_funs','parser.py',65),
  ('dek_funs -> dek_fun','dek_funs',1,'p_dek_funs','parser.py',66),
  ('dek_funs -> dek_fun dek_funs','dek_funs',2,'p_dek_funs','parser.py',67),
  ('dek_fun -> function var_sym identifier l_parenthesis arguments r_parenthesis instrukcjas return wyrazenie end','dek_fun',10,'p_dek_fun','parser.py',78),
  ('dek_fun -> function void identifier l_parenthesis arguments r_parenthesis instrukcjas end','dek_fun',8,'p_dek_fun','parser.py',79),
  ('arguments -> <empty>','arguments',0,'p_arguments','parser.py',88),
  ('arguments -> var_sym identifier','arguments',2,'p_arguments','parser.py',89),
  ('arguments -> var_sym identifier arguments','arguments',3,'p_arguments','parser.py',90),
  ('blok_instrukcji -> instrukcjas','blok_instrukcji',1,'p_blok_instrukcji','parser.py',103),
  ('instrukcjas -> <empty>','instrukcjas',0,'p_instrukcjas','parser.py',109),
  ('instrukcjas -> instrukcja','instrukcjas',1,'p_instrukcjas','parser.py',110),
  ('instrukcjas -> instrukcja instrukcjas','instrukcjas',2,'p_instrukcjas','parser.py',111),
  ('instrukcja -> instr_inicjuj end','instrukcja',2,'p_instrukcja','parser.py',122),
  ('instrukcja -> instr_podstaw end','instrukcja',2,'p_instrukcja','parser.py',123),
  ('instrukcja -> instr_wywolaj end','instrukcja',2,'p_instrukcja','parser.py',124),
  ('instrukcja -> instr_if end','instrukcja',2,'p_instrukcja','parser.py',125),
  ('instrukcja -> instr_while end','instrukcja',2,'p_instrukcja','parser.py',126),
  ('instrukcja -> instr_for end','instrukcja',2,'p_instrukcja','parser.py',127),
  ('instrukcja -> wypisz end','instrukcja',2,'p_instrukcja','parser.py',128),
  ('instrukcja -> instr_switch end','instrukcja',2,'p_instrukcja','parser.py',129),
  ('instr_inicjuj -> var_liczba_sym identifier assign liczba','instr_inicjuj',4,'p_instr_inicjuj','parser.py',135),
  ('instr_inicjuj -> var_liczba_sym identifier assign null','instr_inicjuj',4,'p_instr_inicjuj','parser.py',136),
  ('instr_inicjuj -> string identifier assign text','instr_inicjuj',4,'p_instr_inicjuj','parser.py',137),
  ('instr_inicjuj -> string identifier assign null','instr_inicjuj',4,'p_instr_inicjuj','parser.py',138),
  ('instr_podstaw -> identifier assign wyrazenie','instr_podstaw',3,'p_instr_podstaw','parser.py',146),
  ('instr_podstaw -> identifier assign null','instr_podstaw',3,'p_instr_podstaw','parser.py',147),
  ('instr_wywolaj -> call identifier l_parenthesis wyrazenies r_parenthesis','instr_wywolaj',5,'p_instr_wywolaj','parser.py',153),
  ('wyrazenies -> <empty>','wyrazenies',0,'p_wyrazenies','parser.py',159),
  ('wyrazenies -> wyrazenie','wyrazenies',1,'p_wyrazenies','parser.py',160),
  ('wyrazenies -> wyrazenie wyrazenies','wyrazenies',2,'p_wyrazenies','parser.py',161),
  ('instr_if -> if warunek then instrukcja instrukcjas','instr_if',5,'p_instr_if','parser.py',174),
  ('instr_if -> if warunek then instrukcja instrukcjas else instrukcja instrukcjas','instr_if',8,'p_instr_if','parser.py',175),
  ('instr_while -> while warunek do instrukcjas','instr_while',4,'p_instr_while','parser.py',184),
  ('instr_for -> for for_warunek do instrukcjas','instr_for',4,'p_instr_for','parser.py',191),
  ('wypisz -> print wyrazenie','wypisz',2,'p_wypisz','parser.py',197),
  ('wypisz -> print text','wypisz',2,'p_wypisz','parser.py',198),
  ('instr_switch -> switch l_parenthesis wyrazenie r_parenthesis case_blok case_bloks case_default','instr_switch',7,'p_instr_switch','parser.py',204),
  ('case_blok -> case l_parenthesis wyrazenie r_parenthesis then instrukcjas end','case_blok',7,'p_case_blok','parser.py',214),
  ('case_blok -> case l_parenthesis wyrazenie r_parenthesis then instrukcjas break end','case_blok',8,'p_case_blok','parser.py',215),
  ('case_default -> default then instrukcjas end','case_default',4,'p_case_default','parser.py',221),
  ('case_bloks -> <empty>','case_bloks',0,'p_case_bloks','parser.py',227),
  ('case_bloks -> case_blok','case_bloks',1,'p_case_bloks','parser.py',228),
  ('case_bloks -> case_blok case_bloks','case_bloks',2,'p_case_bloks','parser.py',229),
  ('var_sym -> var_liczba_sym','var_sym',1,'p_var_sym','parser.py',240),
  ('var_sym -> string','var_sym',1,'p_var_sym','parser.py',241),
  ('var_sym -> boolean','var_sym',1,'p_var_sym','parser.py',242),
  ('var_sym -> char','var_sym',1,'p_var_sym','parser.py',243),
  ('var_liczba_sym -> int','var_liczba_sym',1,'p_var_liczba_sym','parser.py',256),
  ('var_liczba_sym -> long','var_liczba_sym',1,'p_var_liczba_sym','parser.py',257),
  ('var_liczba_sym -> float','var_liczba_sym',1,'p_var_liczba_sym','parser.py',258),
  ('var_liczba_sym -> double','var_liczba_sym',1,'p_var_liczba_sym','parser.py',259),
  ('wyrazenie -> skladnik skladniks','wyrazenie',2,'p_wyrazenie','parser.py',272),
  ('wyrazenie -> true','wyrazenie',1,'p_wyrazenie','parser.py',273),
  ('wyrazenie -> false','wyrazenie',1,'p_wyrazenie','parser.py',274),
  ('wyrazenie -> text','wyrazenie',1,'p_wyrazenie','parser.py',275),
  ('skladnik -> czynnik czynniks','skladnik',2,'p_skladnik','parser.py',289),
  ('skladniks -> <empty>','skladniks',0,'p_skladniks','parser.py',295),
  ('skladniks -> oper_add skladnik','skladniks',2,'p_skladniks','parser.py',296),
  ('skladniks -> oper_add skladnik skladniks','skladniks',3,'p_skladniks','parser.py',297),
  ('oper_add -> plus','oper_add',1,'p_oper_add','parser.py',308),
  ('oper_add -> minus','oper_add',1,'p_oper_add','parser.py',309),
  ('oper_mul -> times','oper_mul',1,'p_oper_mul','parser.py',318),
  ('oper_mul -> divide','oper_mul',1,'p_oper_mul','parser.py',319),
  ('czynnik -> identifier','czynnik',1,'p_czynnik','parser.py',328),
  ('czynnik -> liczba','czynnik',1,'p_czynnik','parser.py',329),
  ('czynnik -> instr_wywolaj','czynnik',1,'p_czynnik','parser.py',330),
  ('czynnik -> wyr_w_naw','czynnik',1,'p_czynnik','parser.py',331),
  ('czynniks -> <empty>','czynniks',0,'p_czynniks','parser.py',337),
  ('czynniks -> oper_mul czynnik','czynniks',2,'p_czynniks','parser.py',338),
  ('czynniks -> oper_mul czynnik czynniks','czynniks',3,'p_czynniks','parser.py',339),
  ('liczba -> number_unsigned','liczba',1,'p_liczba','parser.py',350),
  ('liczba -> minus number_unsigned','liczba',2,'p_liczba','parser.py',351),
  ('wyr_w_naw -> l_parenthesis wyrazenie r_parenthesis','wyr_w_naw',3,'p_wyr_w_naw','parser.py',360),
  ('warunek -> warunek_prosty','warunek',1,'p_warunek','parser.py',366),
  ('warunek -> not warunek_prosty warunek_prostys','warunek',3,'p_warunek','parser.py',367),
  ('warunek_prosty -> wyrazenie oper_porownania wyrazenie','warunek_prosty',3,'p_warunek_prosty','parser.py',376),
  ('warunek_prostys -> <empty>','warunek_prostys',0,'p_warunek_prostys','parser.py',382),
  ('warunek_prostys -> oper_war warunek_prosty','warunek_prostys',2,'p_warunek_prostys','parser.py',383),
  ('warunek_prostys -> oper_war warunek_prosty warunek_prostys','warunek_prostys',3,'p_warunek_prostys','parser.py',384),
  ('oper_war -> and','oper_war',1,'p_oper_war','parser.py',395),
  ('oper_war -> or','oper_war',1,'p_oper_war','parser.py',396),
  ('oper_porownania -> equals','oper_porownania',1,'p_oper_porownania','parser.py',402),
  ('oper_porownania -> not_equals','oper_porownania',1,'p_oper_porownania','parser.py',403),
  ('oper_porownania -> greater','oper_porownania',1,'p_oper_porownania','parser.py',404),
  ('oper_porownania -> lower','oper_porownania',1,'p_oper_porownania','parser.py',405),
  ('oper_porownania -> greater_or_equal','oper_porownania',1,'p_oper_porownania','parser.py',406),
  ('oper_porownania -> lower_or_equal','oper_porownania',1,'p_oper_porownania','parser.py',407),
  ('not_equals -> not equals','not_equals',2,'p_not_equals','parser.py',424),
  ('for_warunek -> instr_inicjuj warunek_prosty instr_podstaw','for_warunek',3,'p_for_warunek','parser.py',430),
]
