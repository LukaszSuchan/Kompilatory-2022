
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'and assign boolean break call case char default divide do double else end equals false float for function greater greater_or_equal identifier if int l_parenthesis long lower lower_or_equal minus not null number_unsigned or plus print r_parenthesis return string switch text then times true void whilestart : programprogram : blok\n    blok : blok_deklaracji end blok_instrukcji end\n        | end blok_instrukcji end\n        | blok_deklaracji end end\n        | end end\n    \n    blok_deklaracji : dek_funs\n    \n    dek_funs :\n        | dek_fun\n        | dek_fun dek_funs\n    \n    dek_fun : function var_sym identifier l_parenthesis arguments r_parenthesis instrukcjas return wyrazenie end\n        | function void identifier l_parenthesis arguments r_parenthesis instrukcjas return wyrazenie end\n    \n    arguments :\n        | var_sym identifier\n        | var_sym identifier arguments\n    \n    blok_instrukcji : instrukcjas\n    \n    instrukcjas :\n        | instrukcja\n        | instrukcja instrukcjas\n    \n    instrukcja : instr_inicjuj end\n        | instr_podstaw end\n        | instr_wywolaj end\n        | instr_if end\n        | instr_while end\n        | instr_for end\n        | wypisz end\n        | instr_switch end\n    \n    instr_inicjuj : var_liczba_sym identifier assign liczba\n        | var_liczba_sym identifier assign null\n        | string identifier assign text\n        | string identifier assign null\n    \n    instr_podstaw : identifier assign wyrazenie\n        | identifier assign null\n    \n    instr_wywolaj : call identifier l_parenthesis wyrazenies r_parenthesis\n    \n    wyrazenies :\n        | wyrazenie\n        | wyrazenie wyrazenies\n    \n    instr_if : if warunek then instrukcja instrukcjas\n        | if warunek then instrukcja instrukcjas else instrukcja instrukcjas\n    \n    instr_while : while warunek do instrukcjas\n    \n    instr_for : for for_warunek do instrukcjas\n    \n    wypisz : print wyrazenie\n        | print text\n    \n    instr_switch : switch l_parenthesis wyrazenie r_parenthesis case_blok case_bloks case_default\n    \n    case_blok : case l_parenthesis wyrazenie r_parenthesis then instrukcjas end\n        | case l_parenthesis wyrazenie r_parenthesis then instrukcjas break end\n    \n    case_default : default then instrukcjas end\n    \n    case_bloks :\n        | case_blok\n        | case_blok case_bloks\n    \n    var_sym : var_liczba_sym\n        | string\n        | boolean\n        | char\n    \n    var_liczba_sym : int\n        | long\n        | float\n        | double\n    \n    wyrazenie : skladnik skladniks\n        | true\n        | false\n    \n    skladnik : czynnik czynniks\n    \n    skladniks :\n        | oper_add skladnik\n        | oper_add skladnik skladniks\n    \n    oper_add : plus\n        | minus\n    \n    oper_mul : times\n        | divide\n    \n    czynnik : identifier\n        | liczba\n        | instr_wywolaj\n        | wyr_w_naw\n    \n    czynniks :\n        | oper_mul czynnik\n        | oper_mul czynnik czynniks\n    \n    liczba : number_unsigned\n        | minus number_unsigned\n    \n    wyr_w_naw : l_parenthesis wyrazenie r_parenthesis\n    \n    warunek : warunek_prosty warunek_prostys\n        | not warunek_prosty warunek_prostys\n    \n    warunek_prosty : wyrazenie oper_porownania wyrazenie\n    \n    warunek_prostys :\n        | oper_war warunek_prosty\n        | oper_war warunek_prosty warunek_prostys\n    \n    oper_war : and\n        | or\n    \n    oper_porownania : equals\n        | not_equals\n        | greater\n        | lower\n        | greater_or_equal\n        | lower_or_equal\n    \n    not_equals : not equals\n    \n    for_warunek : instr_inicjuj wyrazenie instr_podstaw\n    '
    
_lr_action_items = {'end':([0,4,5,6,7,9,11,12,13,14,15,16,17,18,19,20,21,35,43,45,46,47,48,49,50,51,52,53,62,63,64,65,66,67,68,69,70,76,77,83,84,101,105,109,111,112,117,118,119,120,123,128,129,130,131,132,138,140,142,143,156,158,163,164,166,167,168,169,170,171,172,173,175,],[5,9,10,-7,-8,42,44,-16,-17,46,47,48,49,50,51,52,53,-10,81,-19,-20,-21,-22,-23,-24,-25,-26,-27,-63,-60,-61,-74,-70,-71,-72,-73,-77,-42,-43,-32,-33,-59,-62,-78,-17,-17,-28,-29,-30,-31,-17,-63,-74,-79,-40,-41,-34,-38,-65,-76,-17,-44,-39,-17,170,171,172,-17,-11,-12,-47,174,176,]),'function':([0,7,170,171,],[8,8,-11,-12,]),'$end':([1,2,3,10,42,44,81,],[0,-1,-2,-6,-5,-4,-3,]),'string':([5,8,9,13,28,46,47,48,49,50,51,52,53,87,111,112,115,116,123,146,147,148,149,156,164,169,],[24,39,24,24,24,-20,-21,-22,-23,-24,-25,-26,-27,24,24,24,39,39,24,39,24,24,24,24,24,24,]),'identifier':([5,9,13,22,24,25,26,27,29,31,32,33,34,36,37,38,39,40,41,46,47,48,49,50,51,52,53,55,60,62,63,64,65,66,67,68,69,70,72,75,78,86,87,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,111,112,113,117,118,119,120,122,123,127,128,129,130,135,138,142,143,147,148,149,152,156,161,162,164,169,],[23,23,23,54,56,57,66,66,66,-55,-56,-57,-58,79,80,-51,-52,-53,-54,-20,-21,-22,-23,-24,-25,-26,-27,66,66,-63,-60,-61,-74,-70,-71,-72,-73,-77,66,66,66,66,23,66,-86,-87,66,-88,-89,-90,-91,-92,-93,-59,66,-66,-67,-62,66,-68,-69,-78,23,23,23,-28,-29,-30,-31,66,23,-94,-63,-74,-79,146,-34,-65,-76,23,23,23,66,23,66,66,23,23,]),'call':([5,9,13,26,27,29,46,47,48,49,50,51,52,53,55,60,62,63,64,65,66,67,68,69,70,72,75,78,86,87,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,111,112,117,118,119,120,122,123,127,128,129,130,138,142,143,147,148,149,152,156,161,162,164,169,],[25,25,25,25,25,25,-20,-21,-22,-23,-24,-25,-26,-27,25,25,-63,-60,-61,-74,-70,-71,-72,-73,-77,25,25,25,25,25,25,-86,-87,25,-88,-89,-90,-91,-92,-93,-59,25,-66,-67,-62,25,-68,-69,-78,25,25,-28,-29,-30,-31,25,25,-94,-63,-74,-79,-34,-65,-76,25,25,25,25,25,25,25,25,25,]),'if':([5,9,13,46,47,48,49,50,51,52,53,87,111,112,123,147,148,149,156,164,169,],[26,26,26,-20,-21,-22,-23,-24,-25,-26,-27,26,26,26,26,26,26,26,26,26,26,]),'while':([5,9,13,46,47,48,49,50,51,52,53,87,111,112,123,147,148,149,156,164,169,],[27,27,27,-20,-21,-22,-23,-24,-25,-26,-27,27,27,27,27,27,27,27,27,27,27,]),'for':([5,9,13,46,47,48,49,50,51,52,53,87,111,112,123,147,148,149,156,164,169,],[28,28,28,-20,-21,-22,-23,-24,-25,-26,-27,28,28,28,28,28,28,28,28,28,28,]),'print':([5,9,13,46,47,48,49,50,51,52,53,87,111,112,123,147,148,149,156,164,169,],[29,29,29,-20,-21,-22,-23,-24,-25,-26,-27,29,29,29,29,29,29,29,29,29,29,]),'switch':([5,9,13,46,47,48,49,50,51,52,53,87,111,112,123,147,148,149,156,164,169,],[30,30,30,-20,-21,-22,-23,-24,-25,-26,-27,30,30,30,30,30,30,30,30,30,30,]),'int':([5,8,9,13,28,46,47,48,49,50,51,52,53,87,111,112,115,116,123,146,147,148,149,156,164,169,],[31,31,31,31,31,-20,-21,-22,-23,-24,-25,-26,-27,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'long':([5,8,9,13,28,46,47,48,49,50,51,52,53,87,111,112,115,116,123,146,147,148,149,156,164,169,],[32,32,32,32,32,-20,-21,-22,-23,-24,-25,-26,-27,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'float':([5,8,9,13,28,46,47,48,49,50,51,52,53,87,111,112,115,116,123,146,147,148,149,156,164,169,],[33,33,33,33,33,-20,-21,-22,-23,-24,-25,-26,-27,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'double':([5,8,9,13,28,46,47,48,49,50,51,52,53,87,111,112,115,116,123,146,147,148,149,156,164,169,],[34,34,34,34,34,-20,-21,-22,-23,-24,-25,-26,-27,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'void':([8,],[37,]),'boolean':([8,115,116,146,],[40,40,40,40,]),'char':([8,115,116,146,],[41,41,41,41,]),'else':([13,45,46,47,48,49,50,51,52,53,123,140,],[-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-17,149,]),'return':([13,45,46,47,48,49,50,51,52,53,147,148,154,155,],[-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-17,-17,161,162,]),'break':([13,45,46,47,48,49,50,51,52,53,169,173,],[-17,-19,-20,-21,-22,-23,-24,-25,-26,-27,-17,175,]),'assign':([23,54,56,],[55,82,85,]),'not':([26,27,61,62,63,64,65,66,67,68,69,70,101,105,109,128,129,130,138,142,143,],[60,60,100,-63,-60,-61,-74,-70,-71,-72,-73,-77,-59,-62,-78,-63,-74,-79,-34,-65,-76,]),'true':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,72,75,78,86,89,90,91,93,94,95,96,97,98,99,101,105,109,117,118,119,120,122,127,128,129,130,138,142,143,152,161,162,],[63,63,63,63,63,-63,-60,-61,-74,-70,-71,-72,-73,-77,63,63,63,63,63,-86,-87,63,-88,-89,-90,-91,-92,-93,-59,-62,-78,-28,-29,-30,-31,63,-94,-63,-74,-79,-34,-65,-76,63,63,63,]),'false':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,72,75,78,86,89,90,91,93,94,95,96,97,98,99,101,105,109,117,118,119,120,122,127,128,129,130,138,142,143,152,161,162,],[64,64,64,64,64,-63,-60,-61,-74,-70,-71,-72,-73,-77,64,64,64,64,64,-86,-87,64,-88,-89,-90,-91,-92,-93,-59,-62,-78,-28,-29,-30,-31,64,-94,-63,-74,-79,-34,-65,-76,64,64,64,]),'number_unsigned':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,71,72,75,78,82,86,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,117,118,119,120,122,127,128,129,130,138,142,143,152,161,162,],[70,70,70,70,70,-63,-60,-61,-74,-70,-71,-72,-73,-77,109,70,70,70,70,70,70,-86,-87,70,-88,-89,-90,-91,-92,-93,-59,70,-66,-67,-62,70,-68,-69,-78,-28,-29,-30,-31,70,-94,-63,-74,-79,-34,-65,-76,70,70,70,]),'minus':([26,27,29,55,60,62,63,64,65,66,67,68,69,70,72,75,78,82,86,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,117,118,119,120,122,127,128,129,130,138,142,143,152,161,162,],[71,71,71,71,71,104,-60,-61,-74,-70,-71,-72,-73,-77,71,71,71,71,71,71,-86,-87,71,-88,-89,-90,-91,-92,-93,-59,71,-66,-67,-62,71,-68,-69,-78,-28,-29,-30,-31,71,-94,104,-74,-79,-34,-65,-76,71,71,71,]),'l_parenthesis':([26,27,29,30,55,57,60,62,63,64,65,66,67,68,69,70,72,75,78,79,80,86,89,90,91,93,94,95,96,97,98,99,101,102,103,104,105,106,107,108,109,117,118,119,120,122,127,128,129,130,138,142,143,145,152,161,162,],[72,72,72,78,72,86,72,-63,-60,-61,-74,-70,-71,-72,-73,-77,72,72,72,115,116,72,72,-86,-87,72,-88,-89,-90,-91,-92,-93,-59,72,-66,-67,-62,72,-68,-69,-78,-28,-29,-30,-31,72,-94,-63,-74,-79,-34,-65,-76,152,72,72,72,]),'text':([29,85,],[77,119,]),'null':([55,82,85,],[84,118,120,]),'then':([58,59,62,63,64,65,66,67,68,69,70,88,92,101,105,109,124,125,126,128,129,130,138,141,142,143,159,165,],[87,-83,-63,-60,-61,-74,-70,-71,-72,-73,-77,-80,-83,-59,-62,-78,-83,-81,-82,-63,-74,-79,-34,-85,-65,-76,164,169,]),'do':([59,62,63,64,65,66,67,68,69,70,73,74,83,84,88,92,101,105,109,124,125,126,128,129,130,133,138,141,142,143,],[-83,-63,-60,-61,-74,-70,-71,-72,-73,-77,111,112,-32,-33,-80,-83,-59,-62,-78,-83,-81,-82,-63,-74,-79,-95,-34,-85,-65,-76,]),'and':([59,62,63,64,65,66,67,68,69,70,92,101,105,109,124,126,128,129,130,138,142,143,],[90,-63,-60,-61,-74,-70,-71,-72,-73,-77,90,-59,-62,-78,90,-82,-63,-74,-79,-34,-65,-76,]),'or':([59,62,63,64,65,66,67,68,69,70,92,101,105,109,124,126,128,129,130,138,142,143,],[91,-63,-60,-61,-74,-70,-71,-72,-73,-77,91,-59,-62,-78,91,-82,-63,-74,-79,-34,-65,-76,]),'equals':([61,62,63,64,65,66,67,68,69,70,100,101,105,109,128,129,130,138,142,143,],[94,-63,-60,-61,-74,-70,-71,-72,-73,-77,127,-59,-62,-78,-63,-74,-79,-34,-65,-76,]),'greater':([61,62,63,64,65,66,67,68,69,70,101,105,109,128,129,130,138,142,143,],[96,-63,-60,-61,-74,-70,-71,-72,-73,-77,-59,-62,-78,-63,-74,-79,-34,-65,-76,]),'lower':([61,62,63,64,65,66,67,68,69,70,101,105,109,128,129,130,138,142,143,],[97,-63,-60,-61,-74,-70,-71,-72,-73,-77,-59,-62,-78,-63,-74,-79,-34,-65,-76,]),'greater_or_equal':([61,62,63,64,65,66,67,68,69,70,101,105,109,128,129,130,138,142,143,],[98,-63,-60,-61,-74,-70,-71,-72,-73,-77,-59,-62,-78,-63,-74,-79,-34,-65,-76,]),'lower_or_equal':([61,62,63,64,65,66,67,68,69,70,101,105,109,128,129,130,138,142,143,],[99,-63,-60,-61,-74,-70,-71,-72,-73,-77,-59,-62,-78,-63,-74,-79,-34,-65,-76,]),'r_parenthesis':([62,63,64,65,66,67,68,69,70,86,101,105,109,110,114,115,116,121,122,128,129,130,136,137,138,139,142,143,146,153,160,],[-63,-60,-61,-74,-70,-71,-72,-73,-77,-35,-59,-62,-78,130,134,-13,-13,138,-35,-63,-74,-79,147,148,-34,-37,-65,-76,-13,-15,165,]),'plus':([62,65,66,67,68,69,70,105,109,128,129,130,138,143,],[103,-74,-70,-71,-72,-73,-77,-62,-78,103,-74,-79,-34,-76,]),'times':([65,66,67,68,69,70,109,129,130,138,],[107,-70,-71,-72,-73,-77,-78,107,-79,-34,]),'divide':([65,66,67,68,69,70,109,129,130,138,],[108,-70,-71,-72,-73,-77,-78,108,-79,-34,]),'case':([134,144,150,174,176,],[145,145,145,-45,-46,]),'default':([144,150,151,157,174,176,],[-48,-48,159,-50,-45,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'program':([0,],[2,]),'blok':([0,],[3,]),'blok_deklaracji':([0,],[4,]),'dek_funs':([0,7,],[6,35,]),'dek_fun':([0,7,],[7,7,]),'blok_instrukcji':([5,9,],[11,43,]),'instrukcjas':([5,9,13,111,112,123,147,148,156,164,169,],[12,12,45,131,132,140,154,155,163,168,173,]),'instrukcja':([5,9,13,87,111,112,123,147,148,149,156,164,169,],[13,13,13,123,13,13,13,13,13,156,13,13,13,]),'instr_inicjuj':([5,9,13,28,87,111,112,123,147,148,149,156,164,169,],[14,14,14,75,14,14,14,14,14,14,14,14,14,14,]),'instr_podstaw':([5,9,13,87,111,112,113,123,147,148,149,156,164,169,],[15,15,15,15,15,15,133,15,15,15,15,15,15,15,]),'instr_wywolaj':([5,9,13,26,27,29,55,60,72,75,78,86,87,89,93,102,106,111,112,122,123,147,148,149,152,156,161,162,164,169,],[16,16,16,68,68,68,68,68,68,68,68,68,16,68,68,68,68,16,16,68,16,16,16,16,68,16,68,68,16,16,]),'instr_if':([5,9,13,87,111,112,123,147,148,149,156,164,169,],[17,17,17,17,17,17,17,17,17,17,17,17,17,]),'instr_while':([5,9,13,87,111,112,123,147,148,149,156,164,169,],[18,18,18,18,18,18,18,18,18,18,18,18,18,]),'instr_for':([5,9,13,87,111,112,123,147,148,149,156,164,169,],[19,19,19,19,19,19,19,19,19,19,19,19,19,]),'wypisz':([5,9,13,87,111,112,123,147,148,149,156,164,169,],[20,20,20,20,20,20,20,20,20,20,20,20,20,]),'instr_switch':([5,9,13,87,111,112,123,147,148,149,156,164,169,],[21,21,21,21,21,21,21,21,21,21,21,21,21,]),'var_liczba_sym':([5,8,9,13,28,87,111,112,115,116,123,146,147,148,149,156,164,169,],[22,38,22,22,22,22,22,22,38,38,22,38,22,22,22,22,22,22,]),'var_sym':([8,115,116,146,],[36,135,135,135,]),'warunek':([26,27,],[58,73,]),'warunek_prosty':([26,27,60,89,],[59,59,92,124,]),'wyrazenie':([26,27,29,55,60,72,75,78,86,89,93,122,152,161,162,],[61,61,76,83,61,110,113,114,122,61,126,122,160,166,167,]),'skladnik':([26,27,29,55,60,72,75,78,86,89,93,102,122,152,161,162,],[62,62,62,62,62,62,62,62,62,62,62,128,62,62,62,62,]),'czynnik':([26,27,29,55,60,72,75,78,86,89,93,102,106,122,152,161,162,],[65,65,65,65,65,65,65,65,65,65,65,65,129,65,65,65,65,]),'liczba':([26,27,29,55,60,72,75,78,82,86,89,93,102,106,122,152,161,162,],[67,67,67,67,67,67,67,67,117,67,67,67,67,67,67,67,67,67,]),'wyr_w_naw':([26,27,29,55,60,72,75,78,86,89,93,102,106,122,152,161,162,],[69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,69,]),'for_warunek':([28,],[74,]),'warunek_prostys':([59,92,124,],[88,125,141,]),'oper_war':([59,92,124,],[89,89,89,]),'oper_porownania':([61,],[93,]),'not_equals':([61,],[95,]),'skladniks':([62,128,],[101,142,]),'oper_add':([62,128,],[102,102,]),'czynniks':([65,129,],[105,143,]),'oper_mul':([65,129,],[106,106,]),'wyrazenies':([86,122,],[121,139,]),'arguments':([115,116,146,],[136,137,153,]),'case_blok':([134,144,150,],[144,150,150,]),'case_bloks':([144,150,],[151,157,]),'case_default':([151,],[158,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> program','start',1,'p_start','parser.py',5),
  ('program -> blok','program',1,'p_program','parser.py',8),
  ('blok -> blok_deklaracji end blok_instrukcji end','blok',4,'p_blok','parser.py',12),
  ('blok -> end blok_instrukcji end','blok',3,'p_blok','parser.py',13),
  ('blok -> blok_deklaracji end end','blok',3,'p_blok','parser.py',14),
  ('blok -> end end','blok',2,'p_blok','parser.py',15),
  ('blok_deklaracji -> dek_funs','blok_deklaracji',1,'p_blok_deklaracji','parser.py',20),
  ('dek_funs -> <empty>','dek_funs',0,'p_dek_funs','parser.py',25),
  ('dek_funs -> dek_fun','dek_funs',1,'p_dek_funs','parser.py',26),
  ('dek_funs -> dek_fun dek_funs','dek_funs',2,'p_dek_funs','parser.py',27),
  ('dek_fun -> function var_sym identifier l_parenthesis arguments r_parenthesis instrukcjas return wyrazenie end','dek_fun',10,'p_dek_fun','parser.py',32),
  ('dek_fun -> function void identifier l_parenthesis arguments r_parenthesis instrukcjas return wyrazenie end','dek_fun',10,'p_dek_fun','parser.py',33),
  ('arguments -> <empty>','arguments',0,'p_arguments','parser.py',38),
  ('arguments -> var_sym identifier','arguments',2,'p_arguments','parser.py',39),
  ('arguments -> var_sym identifier arguments','arguments',3,'p_arguments','parser.py',40),
  ('blok_instrukcji -> instrukcjas','blok_instrukcji',1,'p_blok_instrukcji','parser.py',45),
  ('instrukcjas -> <empty>','instrukcjas',0,'p_instrukcjas','parser.py',50),
  ('instrukcjas -> instrukcja','instrukcjas',1,'p_instrukcjas','parser.py',51),
  ('instrukcjas -> instrukcja instrukcjas','instrukcjas',2,'p_instrukcjas','parser.py',52),
  ('instrukcja -> instr_inicjuj end','instrukcja',2,'p_instrukcja','parser.py',57),
  ('instrukcja -> instr_podstaw end','instrukcja',2,'p_instrukcja','parser.py',58),
  ('instrukcja -> instr_wywolaj end','instrukcja',2,'p_instrukcja','parser.py',59),
  ('instrukcja -> instr_if end','instrukcja',2,'p_instrukcja','parser.py',60),
  ('instrukcja -> instr_while end','instrukcja',2,'p_instrukcja','parser.py',61),
  ('instrukcja -> instr_for end','instrukcja',2,'p_instrukcja','parser.py',62),
  ('instrukcja -> wypisz end','instrukcja',2,'p_instrukcja','parser.py',63),
  ('instrukcja -> instr_switch end','instrukcja',2,'p_instrukcja','parser.py',64),
  ('instr_inicjuj -> var_liczba_sym identifier assign liczba','instr_inicjuj',4,'p_instr_inicjuj','parser.py',69),
  ('instr_inicjuj -> var_liczba_sym identifier assign null','instr_inicjuj',4,'p_instr_inicjuj','parser.py',70),
  ('instr_inicjuj -> string identifier assign text','instr_inicjuj',4,'p_instr_inicjuj','parser.py',71),
  ('instr_inicjuj -> string identifier assign null','instr_inicjuj',4,'p_instr_inicjuj','parser.py',72),
  ('instr_podstaw -> identifier assign wyrazenie','instr_podstaw',3,'p_instr_podstaw','parser.py',77),
  ('instr_podstaw -> identifier assign null','instr_podstaw',3,'p_instr_podstaw','parser.py',78),
  ('instr_wywolaj -> call identifier l_parenthesis wyrazenies r_parenthesis','instr_wywolaj',5,'p_instr_wywolaj','parser.py',83),
  ('wyrazenies -> <empty>','wyrazenies',0,'p_wyrazenies','parser.py',88),
  ('wyrazenies -> wyrazenie','wyrazenies',1,'p_wyrazenies','parser.py',89),
  ('wyrazenies -> wyrazenie wyrazenies','wyrazenies',2,'p_wyrazenies','parser.py',90),
  ('instr_if -> if warunek then instrukcja instrukcjas','instr_if',5,'p_instr_if','parser.py',95),
  ('instr_if -> if warunek then instrukcja instrukcjas else instrukcja instrukcjas','instr_if',8,'p_instr_if','parser.py',96),
  ('instr_while -> while warunek do instrukcjas','instr_while',4,'p_instr_while','parser.py',101),
  ('instr_for -> for for_warunek do instrukcjas','instr_for',4,'p_instr_for','parser.py',106),
  ('wypisz -> print wyrazenie','wypisz',2,'p_wypisz','parser.py',111),
  ('wypisz -> print text','wypisz',2,'p_wypisz','parser.py',112),
  ('instr_switch -> switch l_parenthesis wyrazenie r_parenthesis case_blok case_bloks case_default','instr_switch',7,'p_instr_switch','parser.py',117),
  ('case_blok -> case l_parenthesis wyrazenie r_parenthesis then instrukcjas end','case_blok',7,'p_case_blok','parser.py',122),
  ('case_blok -> case l_parenthesis wyrazenie r_parenthesis then instrukcjas break end','case_blok',8,'p_case_blok','parser.py',123),
  ('case_default -> default then instrukcjas end','case_default',4,'p_case_default','parser.py',128),
  ('case_bloks -> <empty>','case_bloks',0,'p_case_bloks','parser.py',133),
  ('case_bloks -> case_blok','case_bloks',1,'p_case_bloks','parser.py',134),
  ('case_bloks -> case_blok case_bloks','case_bloks',2,'p_case_bloks','parser.py',135),
  ('var_sym -> var_liczba_sym','var_sym',1,'p_var_sym','parser.py',140),
  ('var_sym -> string','var_sym',1,'p_var_sym','parser.py',141),
  ('var_sym -> boolean','var_sym',1,'p_var_sym','parser.py',142),
  ('var_sym -> char','var_sym',1,'p_var_sym','parser.py',143),
  ('var_liczba_sym -> int','var_liczba_sym',1,'p_var_liczba_sym','parser.py',148),
  ('var_liczba_sym -> long','var_liczba_sym',1,'p_var_liczba_sym','parser.py',149),
  ('var_liczba_sym -> float','var_liczba_sym',1,'p_var_liczba_sym','parser.py',150),
  ('var_liczba_sym -> double','var_liczba_sym',1,'p_var_liczba_sym','parser.py',151),
  ('wyrazenie -> skladnik skladniks','wyrazenie',2,'p_wyrazenie','parser.py',156),
  ('wyrazenie -> true','wyrazenie',1,'p_wyrazenie','parser.py',157),
  ('wyrazenie -> false','wyrazenie',1,'p_wyrazenie','parser.py',158),
  ('skladnik -> czynnik czynniks','skladnik',2,'p_skladnik','parser.py',163),
  ('skladniks -> <empty>','skladniks',0,'p_skladniks','parser.py',169),
  ('skladniks -> oper_add skladnik','skladniks',2,'p_skladniks','parser.py',170),
  ('skladniks -> oper_add skladnik skladniks','skladniks',3,'p_skladniks','parser.py',171),
  ('oper_add -> plus','oper_add',1,'p_oper_add','parser.py',176),
  ('oper_add -> minus','oper_add',1,'p_oper_add','parser.py',177),
  ('oper_mul -> times','oper_mul',1,'p_oper_mul','parser.py',182),
  ('oper_mul -> divide','oper_mul',1,'p_oper_mul','parser.py',183),
  ('czynnik -> identifier','czynnik',1,'p_czynnik','parser.py',188),
  ('czynnik -> liczba','czynnik',1,'p_czynnik','parser.py',189),
  ('czynnik -> instr_wywolaj','czynnik',1,'p_czynnik','parser.py',190),
  ('czynnik -> wyr_w_naw','czynnik',1,'p_czynnik','parser.py',191),
  ('czynniks -> <empty>','czynniks',0,'p_czynniks','parser.py',196),
  ('czynniks -> oper_mul czynnik','czynniks',2,'p_czynniks','parser.py',197),
  ('czynniks -> oper_mul czynnik czynniks','czynniks',3,'p_czynniks','parser.py',198),
  ('liczba -> number_unsigned','liczba',1,'p_liczba','parser.py',203),
  ('liczba -> minus number_unsigned','liczba',2,'p_liczba','parser.py',204),
  ('wyr_w_naw -> l_parenthesis wyrazenie r_parenthesis','wyr_w_naw',3,'p_wyr_w_naw','parser.py',213),
  ('warunek -> warunek_prosty warunek_prostys','warunek',2,'p_warunek','parser.py',218),
  ('warunek -> not warunek_prosty warunek_prostys','warunek',3,'p_warunek','parser.py',219),
  ('warunek_prosty -> wyrazenie oper_porownania wyrazenie','warunek_prosty',3,'p_warunek_prosty','parser.py',224),
  ('warunek_prostys -> <empty>','warunek_prostys',0,'p_warunek_prostys','parser.py',229),
  ('warunek_prostys -> oper_war warunek_prosty','warunek_prostys',2,'p_warunek_prostys','parser.py',230),
  ('warunek_prostys -> oper_war warunek_prosty warunek_prostys','warunek_prostys',3,'p_warunek_prostys','parser.py',231),
  ('oper_war -> and','oper_war',1,'p_oper_war','parser.py',236),
  ('oper_war -> or','oper_war',1,'p_oper_war','parser.py',237),
  ('oper_porownania -> equals','oper_porownania',1,'p_oper_porownania','parser.py',242),
  ('oper_porownania -> not_equals','oper_porownania',1,'p_oper_porownania','parser.py',243),
  ('oper_porownania -> greater','oper_porownania',1,'p_oper_porownania','parser.py',244),
  ('oper_porownania -> lower','oper_porownania',1,'p_oper_porownania','parser.py',245),
  ('oper_porownania -> greater_or_equal','oper_porownania',1,'p_oper_porownania','parser.py',246),
  ('oper_porownania -> lower_or_equal','oper_porownania',1,'p_oper_porownania','parser.py',247),
  ('not_equals -> not equals','not_equals',2,'p_not_equals','parser.py',252),
  ('for_warunek -> instr_inicjuj wyrazenie instr_podstaw','for_warunek',3,'p_for_warunek','parser.py',257),
]
